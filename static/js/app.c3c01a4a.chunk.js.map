{"version":3,"sources":["src/theme.js","src/components/ui/AppTextBold.js","src/components/Navbar.js","src/components/AddTodo.js","src/components/Todo.js","src/screens/MainScreen.js","src/components/ui/AppCard.js","src/components/ui/AppButton.js","src/components/EditModal.js","src/screens/TodoScreen.js","App.js","web-build/register-service-worker.js","assets/no-items.png","assets/fonts/Roboto-Regular.ttf","assets/fonts/Roboto-Bold.ttf"],"names":["THEME","AppTextBold","props","Text","style","styles","default","children","StyleSheet","create","fontFamily","Navbar","title","View","navbar","text","height","alignItems","justifyContent","backgroundColor","paddingBottom","color","fontSize","AddTodo","onSubmit","useState","value","setValue","block","TextInput","input","onChangeText","placeholder","autoCorrect","autoCapitalize","autoFocus","AntDesign","Button","onPress","trim","Keyboard","dismiss","Alert","alert","name","flexDirection","padding","marginBottom","width","borderStyle","borderBottomWidth","borderBottomColor","Todo","todo","delTodo","onOpen","TouchableOpacity","activeOpacity","id","borderWidth","borderColor","borderRadius","MainScreen","todos","addTodo","openTodo","Dimensions","get","deviceWidth","setDeviceWidth","useEffect","update","addEventListener","removeEventListener","content","FlatList","data","keyExtractor","item","toString","renderItem","length","imgWrap","Image","source","require","image","resizeMode","AppCard","shadowColor","shadowRadius","shadowOpacity","shadowOffset","elevation","AppButton","button","paddingHorizontal","paddingVertical","EditModal","visible","closeModal","onSave","setTitle","Modal","animationType","transparent","wrap","maxLength","btnGroupe","console","log","flex","TodoScreen","goBack","DANGER_COLOR","GREY_COLOR","modal","setModal","card","FontAwesome","size","buttons","buttonsWidth","loadFonts","a","async","Font","App","isReady","setIsReady","todoId","setTodoId","setTodos","AppLoading","startAsync","onError","err","onFinish","find","prev","filter","cancelable","Date","now","selectedTodo","map","container","navigator","window","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.c3c01a4a.chunk.js","sourcesContent":["export const THEME = {\n  DANGER_COLOR: '#e53935',\n  GREY_COLOR: '#757575',\n  MAIN_COLOR: '#3949ab',\n  SUCCESS_COLOR: 'green',\n  PADDING_HORIZONTAL: 30,\n};\n","import React from 'react';\nimport { Text, StyleSheet } from 'react-native';\n\nexport const AppTextBold = (props) => (\n  <Text style={{ ...styles.default, ...props.style }}>{props.children}</Text>\n);\n\nconst styles = StyleSheet.create({\n  default: {\n    fontFamily: 'roboto-bold',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { THEME } from '../theme';\nimport { AppTextBold } from './ui/AppTextBold';\nexport const Navbar = ({ title }) => {\n  return (\n    <View style={styles.navbar}>\n      <AppTextBold style={styles.text}>{title}</AppTextBold>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  navbar: {\n    height: 70,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: THEME.MAIN_COLOR,\n    paddingBottom: 10,\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n  },\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, TextInput, View, Alert, Keyboard } from 'react-native';\nimport { THEME } from '../theme';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport const AddTodo = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handlePress = () => {\n    if (value.trim()) {\n      onSubmit(value);\n      setValue('');\n      Keyboard.dismiss()\n    } else {\n      Alert.alert('You must enter somthing');\n    }\n  };\n\n  return (\n    <View style={styles.block}>\n      <TextInput\n        style={styles.input}\n        onChangeText={setValue}\n        value={value}\n        placeholder='Enter todo...'\n        autoCorrect={false}\n        autoCapitalize='words'\n        autoFocus={false}\n      />\n      <AntDesign.Button onPress={handlePress} name='pluscircleo'>\n        Add Todo\n      </AntDesign.Button>\n      {/* <Button title='Add Todo'  /> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 5,\n    marginBottom: 15,\n  },\n  input: {\n    width: '60%',\n    padding: 5,\n    borderStyle: 'solid',\n    borderBottomWidth: 2,\n    borderBottomColor: THEME.MAIN_COLOR,\n  },\n});\n","import React from 'react';\nimport { View, StyleSheet, Button, TouchableOpacity } from 'react-native';\nimport { THEME } from '../theme';\nimport { AppTextBold } from './ui/AppTextBold';\n\nexport const Todo = ({ todo, delTodo, onOpen }) => {\n  return (\n    <TouchableOpacity activeOpacity={0.5} onPress={() => onOpen(todo.id)}>\n      <View style={styles.todo}>\n        <AppTextBold style={styles.title}>{todo.title}</AppTextBold>\n        <Button\n          title='Del'\n          onPress={() => delTodo(todo.id)}\n          color={THEME.DANGER_COLOR}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  todo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    borderWidth: 1,\n    borderColor: '#eee',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  title: {\n    fontFamily: 'roboto-bold',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { FlatList, View, Image, StyleSheet, Dimensions } from 'react-native';\nimport { AddTodo } from '../components/AddTodo';\nimport { Todo } from '../components/Todo';\nimport { THEME } from '../theme';\n\nexport const MainScreen = ({ todos, delTodo, addTodo, openTodo }) => {\n  const [deviceWidth, setDeviceWidth] = useState(\n    Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2\n  );\n\n  useEffect(() => {\n    const update = () => {\n      const width =\n        Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2;\n      setDeviceWidth(width);\n    };\n    Dimensions.addEventListener('change', update);\n\n    return () => {\n      Dimensions.removeEventListener('change', update)\n    }\n  });\n\n  let content = (\n    <View style={{ width: deviceWidth }}>\n      <FlatList\n        data={todos}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={({ item }) => (\n          <Todo todo={item} delTodo={delTodo} onOpen={openTodo} />\n        )}\n      />\n    </View>\n  );\n\n  if (todos.length === 0) {\n    content = (\n      <View style={styles.imgWrap}>\n        <Image\n          source={require('../../assets/no-items.png')}\n          style={styles.image}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View>\n      <AddTodo onSubmit={addTodo} />\n      {content}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imgWrap: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    height: 300,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'contain',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport const AppCard = ({ children, style }) => (\n  <View style={{ ...styles.default, ...style }}>{children}</View>\n);\n\nconst styles = StyleSheet.create({\n  default: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n\n    shadowColor: '#000',\n    shadowRadius: 2,\n    shadowOpacity: 0.3,\n    shadowOffset: { width: 2, height: 2 },\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    elevation: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { AppTextBold } from './AppTextBold';\nimport { THEME } from '../../theme';\n\nexport const AppButton = ({ children, onPress, color = THEME.MAIN_COLOR }) => {\n  return (\n    <TouchableOpacity onPress={onPress} activeOpacity={0.6}>\n      <View style={{ ...styles.button, backgroundColor: color }}>\n        <AppTextBold style={styles.text}>{children}</AppTextBold>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#fff'\n  }\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  Button,\n  Modal,\n  Alert,\n} from 'react-native';\nimport { THEME } from '../theme';\nimport { AppButton } from './ui/AppButton';\n\nexport const EditModal = ({ visible, closeModal, value, onSave }) => {\n  const [title, setTitle] = useState(value);\n  const saveHandler = () => {\n    if (title.trim().length < 3) {\n      console.log(title);\n      Alert.alert(\n        'Error',\n        `Minimal length length todo 3 char, now ${title.length} chars`\n      );\n    } else {\n      onSave(title);\n    }\n  };\n  return (\n    <Modal visible={visible} animationType='slide' transparent={false}>\n      <View style={styles.wrap}>\n        <TextInput\n          value={title}\n          onChangeText={setTitle}\n          style={styles.input}\n          maxLength={64}\n        />\n        <View style={styles.btnGroupe}>\n          <View style={styles.button}>\n            <AppButton\n              onPress={() => closeModal(false)}\n              color={THEME.DANGER_COLOR}\n            >Cancel</AppButton>\n          </View>\n          <View style={styles.button}>\n            <AppButton onPress={saveHandler} >\n              Save\n            </AppButton>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrap: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  input: {\n    padding: 10,\n    marginBottom: 20,\n    width: '80%',\n    borderBottomWidth: 2,\n    borderBottomColor: THEME.MAIN_COLOR,\n  },\n  btnGroupe: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-around',\n  },\n  button: {\n    width: '30%',\n  },\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\nimport { THEME } from '../theme';\nimport { AppCard } from '../components/ui/AppCard';\nimport { EditModal } from '../components/EditModal';\nimport { AppTextBold } from '../components/ui/AppTextBold';\nimport { AppButton } from '../components/ui/AppButton';\n\nexport const TodoScreen = ({ goBack, todo, delTodo, onSave }) => {\n  const { DANGER_COLOR, GREY_COLOR } = THEME;\n\n  const [modal, setModal] = useState(false);\n\n  const saveHadler = (title) => {\n    onSave(todo.id, title);\n    setModal(false);\n  };\n\n  return (\n    <View style={styles.block}>\n      <EditModal\n        visible={modal}\n        closeModal={setModal}\n        value={todo.title}\n        onSave={saveHadler}\n      />\n      <AppCard style={styles.card}>\n        <AppTextBold style={styles.title}>{todo.title}</AppTextBold>\n        <AppButton onPress={() => setModal(true)}>\n          <FontAwesome name='edit' size={20} />\n        </AppButton>\n      </AppCard>\n      <View style={styles.buttons}>\n        <View style={styles.buttonsWidth}>\n          <AppButton onPress={goBack} color={GREY_COLOR}>\n            <AntDesign name='back' size={20} color='#fff' />\n          </AppButton>\n        </View>\n        <View style={styles.buttonsWidth}>\n          <AppButton onPress={delTodo} color={DANGER_COLOR}>\n            <AntDesign name='delete' size={20} color='#fff' />\n          </AppButton>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  block: {},\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15,\n  },\n  buttonsWidth: {\n    width: Dimensions.get('window').width / 3,\n  },\n  title: {\n    fontSize: 20,\n  },\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, View, Alert } from 'react-native';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\n\nimport { Navbar } from './src/components/Navbar';\nimport { MainScreen } from './src/screens/MainScreen';\nimport { TodoScreen } from './src/screens/TodoScreen';\nimport { THEME } from './src/theme';\n\n  async function loadFonts() {\n    await Font.loadAsync({\n      'roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n      'roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n    });\n  }\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n  const [todoId, setTodoId] = useState(null);\n  const [todos, setTodos] = useState([{ id: '1', title: 'learn RN' }]);\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={loadFonts}\n        onError={err => console.log(err)}\n        onFinish={() => setIsReady(true)}\n      />\n    );\n  }\n\n  const addTodo = (title) => {\n    setTodos((prev) => [\n      ...prev,\n      {\n        id: Date.now().toString(),\n        title,\n      },\n    ]);\n  };\n\n  const delTodo = (id) => {\n    const todo = todos.find((todo) => todo.id === id);\n    Alert.alert(\n      'Delete Todo',\n      `Are you sure delete \"${todo.title}\"? `,\n      [\n        {\n          text: 'Cancel',\n          style: 'cancel',\n        },\n        {\n          text: 'Delete',\n          onPress: () => {\n            setTodoId(null);\n            setTodos((prev) => prev.filter((todo) => todo.id !== id));\n          },\n        },\n      ],\n      { cancelable: false }\n    );\n  };\n\n  const updateTodo = (id, title) => {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        if (todo.id === id) {\n          todo.title = title;\n        }\n        return todo;\n      })\n    );\n  };\n\n  let content = (\n    <MainScreen\n      todos={todos}\n      delTodo={delTodo}\n      addTodo={addTodo}\n      openTodo={setTodoId}\n    />\n  );\n\n  if (todoId) {\n    const selectedTodo = todos.find((todo) => todo.id === todoId);\n    content = (\n      <TodoScreen\n        goBack={() => setTodoId(null)}\n        todo={selectedTodo}\n        delTodo={() => delTodo(todoId)}\n        onSave={updateTodo}\n      />\n    );\n  }\n\n  return (\n    <View>\n      <Navbar title='Todo App' />\n      <View style={styles.container}>{content}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: THEME.PADDING_HORIZONTAL,\n    paddingVertical: 20,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/rn-todoApp/expo-service-worker.js', { scope: '/rn-todoApp/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/no-items.eba6baad.png\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";"],"sourceRoot":""}